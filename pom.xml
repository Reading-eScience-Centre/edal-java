<?xml version="1.0" encoding="UTF-8"?>
<!-- Top-level POM for Java-CSML library -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- We inherit from oss-parent so we can deploy to sonatype.org -->
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>uk.ac.rdg.resc</groupId>
    <version>1.0-SNAPSHOT</version>
    <artifactId>edal</artifactId>
    <name>Environmental Data Abstraction Library</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Enables auto-insertion of licence in new source code files. 
            Could be extracted to a separate settings file, as per http://mevenide.codehaus.org/m2-site/mevenide2-netbeans/customizations.html -->
        <netbeans.hint.license>bsd-3clause</netbeans.hint.license>
    </properties>

    <packaging>pom</packaging>
    <url>http://code.google.com/p/edal-java/</url>
    <inceptionYear>2010</inceptionYear>
    <description>EDAL (Environmental Data Abstraction Library) is a set of Java libararies that provide a consistent means for accessing and manipulating environmental data. The core concepts are based on the standards-compliant data model of the Climate Science Modelling Language.</description>
    <organization>
        <name>Reading e-Science Centre, University of Reading, UK</name>
        <url>http://www.resc.reading.ac.uk</url>
    </organization>
    <licenses>
        <license>
            <url>http://edal-java.googlecode.com/hg/licence.txt</url>
            <name>Modified BSD licence</name>
            <comments>Permits redistribution and use in source and binary form
            provided that the copyright notice is retained (see licence for
            full details).</comments>
        </license>
    </licenses>
    <!-- groupId, developers and build sections are all inherited by child 
        modules -->
    <developers>
        <developer>
            <name>Jon Blower</name>
            <organization>Reading e-Science Centre, University of Reading, UK</organization>
            <organizationUrl>http://www.resc.reading.ac.uk</organizationUrl>
            <email>j.d.blower@reading.ac.uk</email>
        </developer>
        <developer>
            <name>Guy Griffiths</name>
            <organization>Reading e-Science Centre, University of Reading, UK</organization>
            <organizationUrl>http://www.resc.reading.ac.uk</organizationUrl>
            <email>guy.griffiths@reading.ac.uk</email>
        </developer>
    </developers>
    <build>
        <plugins>
            <plugin>
                <!-- Sets the source version to 1.7 -->
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
                <version>2.5.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>true</useReleaseProfile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <version>2.8.1</version>
                <configuration>
                    <docfilessubdirs>true</docfilessubdirs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <version>2.2.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
                <version>2.9</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-ssh</artifactId>
                        <version>1.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <inputDirectory>${project.reporting.outputDirectory}/apidocs</inputDirectory>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-enforcer-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>enforce</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <issueManagement>
        <system>Google Code</system>
        <url>http://code.google.com/p/edal-java/issues</url>
    </issueManagement>
    <reporting>
        <plugins>
            <plugin>
                <!-- Create aggregated javadoc for all modules -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <goal>javadoc:aggregate</goal>
                    <!-- These links really belong in the child POMs but 
                        if we put them there, they don't seem to get picked up when building the 
                        javadoc for the aggregated project. Therefore if the versions of any of the 
                        dependencies change these links will also have to be updated. -->
                    <links>
                        <link>http://java.sun.com/j2se/1.6.0/docs/api/</link>
                        <link>http://joda-time.sourceforge.net/api-2.0/</link>
                        <link>http://www.geoapi.org/3.0/javadoc/</link>
                    </links>
                </configuration>
                <version>2.9</version>
            </plugin>
            <plugin>
                <!-- This means that we only generate javadocs for the site -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.6</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <scm>
        <connection>scm:hg:https://edal-java.googlecode.com/hg/</connection>
        <developerConnection>scm:hg:https://edal-java.googlecode.com/hg/</developerConnection>
        <url>http://code.google.com/p/edal-java/source/browse/</url>
    </scm>
    <distributionManagement>
        <!-- use the following if you're not using a snapshot version. -->
        <repository>
            <id>edal-java-release</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <id>edal-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <site>
            <id>sweeney</id>
            <url>scp://sweeney.nerc-essc.ac.uk/users/resc/website/edal</url>
        </site>
    </distributionManagement>
    <modules>
        <!-- Note that these are relative directory paths, not artifactIds! -->
        <module>common</module>
        <module>graphics</module>
        <module>godiva</module>
        <module>wms</module>
        <module>cdm</module>
        <module>ncwms</module>
    </modules>
    <repositories>
        <repository>
            <!-- This allows us to include local maven repos in each module 
                to contain dependencies which are not available through maven. We have only 
                a single example, in the graphics module. We could define it in the graphics 
                pom.xml, but that means that javadoc generation fails when we call it from 
                this level. -->
            <id>libs</id>
            <name>Non-maven dependencies</name>
            <releases>
                <enabled>true</enabled>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>file://${project.basedir}/lib</url>
        </repository>
    </repositories>
</project>
